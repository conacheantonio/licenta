{"ast":null,"code":"import { serverUrl } from '../constants';\nimport { getToken } from '../utils/jwt';\nexport async function getAllUsers(callback) {\n  const token = getToken();\n  if (!token) {\n    return '';\n  }\n  const res = await fetch(serverUrl + '/users', {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include'\n  });\n  const json = await res.json();\n  callback(json.users);\n}\nexport async function makeAdmin(id) {\n  const token = getToken();\n  if (!token) {\n    return '';\n  }\n  const res = await fetch(serverUrl + `/users/makeAdmin?id=${id}`, {\n    method: 'PATCH',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include'\n  });\n  // const json = await res.json() // validate no error\n  if (res.status === 204) {\n    return true;\n  } else {\n    const {\n      message\n    } = await res.json();\n    return message;\n  }\n}\nexport async function approveUser(id) {\n  const token = getToken();\n  if (!token) {\n    return '';\n  }\n  const res = await fetch(serverUrl + `/users/approveUser?id=${id}`, {\n    method: 'PATCH',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include'\n  });\n  // const json = await res.json() // validate no error\n  return res.status === 204;\n}\nexport async function banUser(id) {\n  const token = getToken();\n  if (!token) {\n    return '';\n  }\n  const res = await fetch(serverUrl + `/users/banUser?id=${id}`, {\n    method: 'PATCH',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include'\n  });\n  // const json = await res.json() // validate no error\n  return res.status === 204;\n}","map":{"version":3,"names":["serverUrl","getToken","getAllUsers","callback","token","res","fetch","method","headers","credentials","json","users","makeAdmin","id","status","message","approveUser","banUser"],"sources":["C:/Users/conac/Desktop/OFICIAL/bookstore/frontend/src/api/users.js"],"sourcesContent":["import { serverUrl } from '../constants'\r\nimport { getToken } from '../utils/jwt'\r\n\r\nexport async function getAllUsers(callback) {\r\n    const token = getToken()\r\n    if (!token) {\r\n        return ''\r\n    }\r\n    const res = await fetch(serverUrl + '/users', {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n    })\r\n    const json = await res.json()\r\n    callback(json.users)\r\n}\r\n\r\nexport async function makeAdmin(id) {\r\n    const token = getToken()\r\n    if (!token) {\r\n        return ''\r\n    }\r\n    const res = await fetch(serverUrl + `/users/makeAdmin?id=${id}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n    })\r\n    // const json = await res.json() // validate no error\r\n    if (res.status === 204) {\r\n        return true\r\n    } else {\r\n        const { message } = await res.json()\r\n        return message\r\n    }\r\n}\r\n\r\nexport async function approveUser(id) {\r\n    const token = getToken()\r\n    if (!token) {\r\n        return ''\r\n    }\r\n    const res = await fetch(serverUrl + `/users/approveUser?id=${id}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n    })\r\n    // const json = await res.json() // validate no error\r\n    return res.status === 204\r\n}\r\n\r\nexport async function banUser(id) {\r\n    const token = getToken()\r\n    if (!token) {\r\n        return ''\r\n    }\r\n    const res = await fetch(serverUrl + `/users/banUser?id=${id}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n    })\r\n    // const json = await res.json() // validate no error\r\n    return res.status === 204\r\n}\r\n\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,cAAc;AACxC,SAASC,QAAQ,QAAQ,cAAc;AAEvC,OAAO,eAAeC,WAAWA,CAACC,QAAQ,EAAE;EACxC,MAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAC;EACxB,IAAI,CAACG,KAAK,EAAE;IACR,OAAO,EAAE;EACb;EACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACN,SAAS,GAAG,QAAQ,EAAE;IAC1CO,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IACpB,CAAC;IACDC,WAAW,EAAE;EACjB,CAAC,CAAC;EACF,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACK,IAAI,CAAC,CAAC;EAC7BP,QAAQ,CAACO,IAAI,CAACC,KAAK,CAAC;AACxB;AAEA,OAAO,eAAeC,SAASA,CAACC,EAAE,EAAE;EAChC,MAAMT,KAAK,GAAGH,QAAQ,CAAC,CAAC;EACxB,IAAI,CAACG,KAAK,EAAE;IACR,OAAO,EAAE;EACb;EACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACN,SAAS,GAAI,uBAAsBa,EAAG,EAAC,EAAE;IAC7DN,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IACpB,CAAC;IACDC,WAAW,EAAE;EACjB,CAAC,CAAC;EACF;EACA,IAAIJ,GAAG,CAACS,MAAM,KAAK,GAAG,EAAE;IACpB,OAAO,IAAI;EACf,CAAC,MAAM;IACH,MAAM;MAAEC;IAAQ,CAAC,GAAG,MAAMV,GAAG,CAACK,IAAI,CAAC,CAAC;IACpC,OAAOK,OAAO;EAClB;AACJ;AAEA,OAAO,eAAeC,WAAWA,CAACH,EAAE,EAAE;EAClC,MAAMT,KAAK,GAAGH,QAAQ,CAAC,CAAC;EACxB,IAAI,CAACG,KAAK,EAAE;IACR,OAAO,EAAE;EACb;EACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACN,SAAS,GAAI,yBAAwBa,EAAG,EAAC,EAAE;IAC/DN,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IACpB,CAAC;IACDC,WAAW,EAAE;EACjB,CAAC,CAAC;EACF;EACA,OAAOJ,GAAG,CAACS,MAAM,KAAK,GAAG;AAC7B;AAEA,OAAO,eAAeG,OAAOA,CAACJ,EAAE,EAAE;EAC9B,MAAMT,KAAK,GAAGH,QAAQ,CAAC,CAAC;EACxB,IAAI,CAACG,KAAK,EAAE;IACR,OAAO,EAAE;EACb;EACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACN,SAAS,GAAI,qBAAoBa,EAAG,EAAC,EAAE;IAC3DN,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IACpB,CAAC;IACDC,WAAW,EAAE;EACjB,CAAC,CAAC;EACF;EACA,OAAOJ,GAAG,CAACS,MAAM,KAAK,GAAG;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}