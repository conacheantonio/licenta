{"ast":null,"code":"import { serverUrl } from '../constants';\nimport { getToken } from '../utils/jwt';\nexport async function getAllBooks(callback, filter = '', fieldToFilterBy = '') {\n  const token = getToken();\n  if (!token) {\n    return '';\n  }\n  const res = await fetch(serverUrl + `/books${filter ? '?key=' + fieldToFilterBy + '&value=' + filter : ''}`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include'\n  });\n  const json = await res.json();\n  callback(json.message);\n}\nexport async function removeBook(ISBN) {\n  const token = getToken();\n  if (!token) {\n    return '';\n  }\n  const res = await fetch(serverUrl + `/books?ISBN=${ISBN}`, {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include'\n  });\n  if (res.status === 204) {\n    return true;\n  } else {\n    const {\n      message\n    } = await res.json();\n    return message;\n  }\n}\nexport async function createBook({\n  ISBN,\n  title,\n  author,\n  description,\n  year,\n  pages,\n  genre\n}) {\n  const token = getToken();\n  if (!token) {\n    return '';\n  }\n  const res = await fetch(serverUrl + `/books`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      ISBN,\n      title,\n      author,\n      description,\n      year,\n      pages,\n      genre\n    }),\n    credentials: 'include'\n  });\n  return res;\n}\nexport async function increaseBookStock({\n  id,\n  ISBN,\n  year,\n  pages\n}) {\n  const token = getToken();\n  if (!token) {\n    return '';\n  }\n  const res = await fetch(serverUrl + `/books/increaseBookStock?id=${id}`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      ISBN,\n      year,\n      pages\n    }),\n    credentials: 'include'\n  });\n  return res;\n}\nexport async function changeDescription({\n  id,\n  newDescription\n}) {\n  const token = getToken();\n  if (!token) {\n    return '';\n  }\n  const res = await fetch(serverUrl + `/books/changeDescription?id=${id}`, {\n    method: 'PATCH',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      description: newDescription\n    }),\n    credentials: 'include'\n  });\n  return res;\n}","map":{"version":3,"names":["serverUrl","getToken","getAllBooks","callback","filter","fieldToFilterBy","token","res","fetch","method","headers","credentials","json","message","removeBook","ISBN","status","createBook","title","author","description","year","pages","genre","body","JSON","stringify","increaseBookStock","id","changeDescription","newDescription"],"sources":["C:/Users/conac/Desktop/OFICIAL/bookstore/frontend/src/api/book.js"],"sourcesContent":["import { serverUrl } from '../constants'\r\nimport { getToken } from '../utils/jwt'\r\n\r\nexport async function getAllBooks(callback, filter = '', fieldToFilterBy = '') {\r\n    const token = getToken()\r\n    if (!token) {\r\n        return ''\r\n    }\r\n    const res = await fetch(serverUrl + `/books${filter ? '?key=' + fieldToFilterBy + '&value=' + filter : ''}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n    })\r\n    const json = await res.json()\r\n    callback(json.message)\r\n}\r\n\r\nexport async function removeBook(ISBN) {\r\n    const token = getToken()\r\n    if (!token) {\r\n        return ''\r\n    }\r\n    const res = await fetch(serverUrl + `/books?ISBN=${ISBN}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n    })\r\n    if (res.status === 204) {\r\n        return true\r\n    } else {\r\n        const { message } = await res.json()\r\n        return message\r\n    }\r\n}\r\n\r\nexport async function createBook({ ISBN, title, author, description, year, pages, genre }) {\r\n    const token = getToken()\r\n    if (!token) {\r\n        return ''\r\n    }\r\n    const res = await fetch(serverUrl + `/books`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ ISBN, title, author, description, year, pages, genre }),\r\n        credentials: 'include'\r\n    })\r\n    return res\r\n}\r\n\r\nexport async function increaseBookStock({ id, ISBN, year, pages }) {\r\n    const token = getToken()\r\n    if (!token) {\r\n        return ''\r\n    }\r\n    const res = await fetch(serverUrl + `/books/increaseBookStock?id=${id}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ ISBN, year, pages }),\r\n        credentials: 'include'\r\n    })\r\n    return res\r\n}\r\n\r\nexport async function changeDescription({ id, newDescription }) {\r\n    const token = getToken()\r\n    if (!token) {\r\n        return ''\r\n    }\r\n    const res = await fetch(serverUrl + `/books/changeDescription?id=${id}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ description: newDescription }),\r\n        credentials: 'include'\r\n    })\r\n    return res\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}