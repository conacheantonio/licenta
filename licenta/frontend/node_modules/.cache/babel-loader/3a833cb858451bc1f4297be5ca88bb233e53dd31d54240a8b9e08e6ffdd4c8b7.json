{"ast":null,"code":"import{useEffect,useState}from'react';import Error from'../../error/error';import{resetPassword}from'../../../api/auth';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function ForgotPasswordForm(_ref){let{handleBackToLogin}=_ref;const[email,setEmail]=useState('');const[pin,setPin]=useState('');const[phoneNumber,setPhoneNumber]=useState('');const[newPassword,setPassword]=useState('');const[confirmedPassword,setConfirmedPassword]=useState('');const[errorMessage,setErrorMessage]=useState('');useEffect(()=>{if(newPassword&&confirmedPassword&&newPassword!==confirmedPassword){setErrorMessage('Parola nu a fost confirmata!');}else{setErrorMessage('');}},[newPassword,confirmedPassword]);async function handleFormSubmit(event){// prevent redirect before validations\nevent.preventDefault();if(newPassword&&confirmedPassword&&newPassword===confirmedPassword){try{const resetPasswordResponse=await resetPassword(email,newPassword,confirmedPassword,phoneNumber,pin);const json=await resetPasswordResponse.json();// // check for error\nconst status=resetPasswordResponse.status;if(status!==200){setErrorMessage(json.message);return;}alert('Parola resetata cu succes');// read jwt from response and set as cookie\ndocument.cookie=\"token=\".concat(json.token,\";max-age=\").concat(json.expirationDate*1000);// \"redirect\" to correct page\nwindow.location.reload();}catch(e){// server died or response could not be read\nsetErrorMessage('Ceva nu a mers. Te rugam sa revii mai tarziu.');}}}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:event=>handleFormSubmit(event),children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",onChange:event=>setEmail(event.target.value),placeholder:\"utilizator@email.com\",required:true}),/*#__PURE__*/_jsx(\"label\",{children:\"Pin\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",onChange:event=>setPin(event.target.value),placeholder:\"1234\",required:true}),/*#__PURE__*/_jsx(\"label\",{children:\"Telefon\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",onChange:event=>setPhoneNumber(event.target.value),placeholder:\"0755123456\",required:true}),/*#__PURE__*/_jsx(\"label\",{children:\"Parola noua\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",onChange:event=>setPassword(event.target.value),placeholder:\"parola puternica\",required:true}),/*#__PURE__*/_jsx(\"label\",{children:\"Repeta parola noua\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",onChange:event=>setConfirmedPassword(event.target.value),placeholder:\"parola puternica\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Reseteaza parola\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleBackToLogin,children:\"Inapoi la login\"})})]}),/*#__PURE__*/_jsx(Error,{message:errorMessage})]});}","map":{"version":3,"names":["useEffect","useState","Error","resetPassword","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ForgotPasswordForm","_ref","handleBackToLogin","email","setEmail","pin","setPin","phoneNumber","setPhoneNumber","newPassword","setPassword","confirmedPassword","setConfirmedPassword","errorMessage","setErrorMessage","handleFormSubmit","event","preventDefault","resetPasswordResponse","json","status","message","alert","document","cookie","concat","token","expirationDate","window","location","reload","e","children","onSubmit","type","onChange","target","value","placeholder","required","onClick"],"sources":["C:/Users/conac/Desktop/OFICIAL/bookstore/frontend/src/components/auth/forgot-password-form/forgot-password-form.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport Error from '../../error/error'\r\nimport { resetPassword } from '../../../api/auth'\r\n\r\nexport default function ForgotPasswordForm({ handleBackToLogin }) {\r\n    const [email, setEmail] = useState('')\r\n    const [pin, setPin] = useState('')\r\n    const [phoneNumber, setPhoneNumber] = useState('')\r\n    const [newPassword, setPassword] = useState('')\r\n    const [confirmedPassword, setConfirmedPassword] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (newPassword && confirmedPassword && newPassword !== confirmedPassword) {\r\n            setErrorMessage('Parola nu a fost confirmata!')\r\n        } else {\r\n            setErrorMessage('')\r\n        }\r\n    }, [newPassword, confirmedPassword])\r\n\r\n    async function handleFormSubmit(event) {\r\n        // prevent redirect before validations\r\n        event.preventDefault()\r\n        if (newPassword && confirmedPassword && newPassword === confirmedPassword) {\r\n            try {\r\n                const resetPasswordResponse = await resetPassword(email, newPassword, confirmedPassword, phoneNumber, pin)\r\n                const json = await resetPasswordResponse.json()\r\n\r\n                // // check for error\r\n                const status = resetPasswordResponse.status\r\n                if (status !== 200) {\r\n                    setErrorMessage(json.message)\r\n                    return\r\n                }\r\n\r\n                alert('Parola resetata cu succes')\r\n\r\n                // read jwt from response and set as cookie\r\n                document.cookie = `token=${json.token};max-age=${json.expirationDate * 1000}`\r\n                // \"redirect\" to correct page\r\n                window.location.reload()\r\n            } catch (e) { // server died or response could not be read\r\n                setErrorMessage('Ceva nu a mers. Te rugam sa revii mai tarziu.')\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={(event) => handleFormSubmit(event)}>\r\n                <label>Email</label>\r\n                <input type=\"email\" onChange={(event) => setEmail(event.target.value)} placeholder=\"utilizator@email.com\" required />\r\n                <label>Pin</label>\r\n                <input type=\"password\" onChange={(event) => setPin(event.target.value)} placeholder=\"1234\" required />\r\n                <label>Telefon</label>\r\n                <input type=\"tel\" onChange={(event) => setPhoneNumber(event.target.value)} placeholder=\"0755123456\" required />\r\n                <label>Parola noua</label>\r\n                <input type=\"password\" onChange={(event) => setPassword(event.target.value)} placeholder=\"parola puternica\" required />\r\n                <label>Repeta parola noua</label>\r\n                <input type=\"password\" onChange={(event) => setConfirmedPassword(event.target.value)} placeholder=\"parola puternica\" required />\r\n                <button type=\"submit\">Reseteaza parola</button>\r\n                <p><button type=\"button\" onClick={handleBackToLogin}>Inapoi la login</button></p>\r\n            </form>\r\n            <Error message={errorMessage} />\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}